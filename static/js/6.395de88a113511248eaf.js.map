{"version":3,"sources":["webpack:///src/components/pages/Query.vue","webpack:///./src/components/pages/Query.vue?8e81","webpack:///./src/components/pages/Query.vue","webpack:///./node_modules/fuse.js/dist/fuse.js"],"names":["Query","ListItem","ArchiveListItem","String","slice","pages_Query","render","_vm","this","_h","$createElement","_c","_self","_v","_s","query","staticClass","queryPosts","length","_l","post","attrs","show-year","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","root","factory","module","exports","modules","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","obj","toString","_createClass","defineProperties","target","props","descriptor","writable","key","Constructor","protoProps","staticProps","bitapRegexSearch","bitapSearch","patternAlphabet","Bitap","pattern","_ref","_ref$location","location","undefined","_ref$distance","distance","_ref$threshold","threshold","_ref$maxPatternLength","maxPatternLength","_ref$isCaseSensitive","isCaseSensitive","_ref$tokenSeparator","tokenSeparator","_ref$findAllMatches","findAllMatches","_ref$minMatchCharLeng","minMatchCharLength","instance","TypeError","_classCallCheck","options","toLowerCase","text","isMatch","score","matchedIndices","_options","_options2","isArray","path","deepValue","list","dotIndex","indexOf","firstSegment","remaining","len","push","matchmask","arguments","start","end","match","mask","charAt","_i","SPECIAL_CHARS_REGEX","regex","RegExp","replace","matches","matchesLen","_ref$errors","errors","_ref$currentLocation","currentLocation","_ref$expectedLocation","expectedLocation","accuracy","proximity","Math","abs","bitapScore","textLen","currentThreshold","bestLocation","patternLen","matchMask","min","lastIndexOf","_score","lastBitArr","finalScore","binMax","binMin","binMid","floor","max","finish","bitArr","Array","j","charMatch","Fuse","_ref$caseSensitive","caseSensitive","_ref$id","id","_ref$keys","keys","_ref$shouldSort","shouldSort","_ref$getFn","getFn","_ref$sortFn","sortFn","a","b","_ref$tokenize","tokenize","_ref$matchAllTokens","matchAllTokens","_ref$includeMatches","includeMatches","_ref$includeScore","includeScore","_ref$verbose","verbose","setCollection","_log","_prepareSearchers2","_prepareSearchers","tokenSearchers","fullSearcher","_search2","_search","weights","results","_computeScore","_sort","_format","tokens","split","resultMap","_analyze","record","index","_len","item","keysLen","weight","Error","_ref2","_ref3","_ref2$arrayIndex","arrayIndex","_ref3$tokenSearchers","_ref3$fullSearcher","_ref3$resultMap","_ref3$results","exists","averageScore","numTextMatches","mainSearchResult","search","words","scores","tokenSearcher","hasMatchInText","word","tokenSearchResult","scoresLen","_i2","checkTextMatches","existingResult","output","_i3","scoreLen","totalScore","bestScore","nScore","sort","finalOutput","JSON","stringify","transformers","result","data","indices","_len2","_console","console","log","apply"],"mappings":"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","file":"static/js/6.395de88a113511248eaf.js","sourcesContent":["<template>\n  <section>\n    <h1>Search '{{query}}'</h1>\n    <p class=\"text-muted\">\n      <span v-if=\"queryPosts.length\">\n        <i class=\"glyphicon glyphicon-check\"></i> <b>{{queryPosts.length}}</b> matched found.\n      </span>\n      <span v-else>\n        <i class=\"glyphicon glyphicon-info-sign\"></i> No result.\n      </span>\n    </p>\n    <ul class=\"archives-list\">\n      <li v-for=\"post in queryPosts\">\n        <list-item :post=\"post\" :show-year=\"true\"></list-item>\n      </li>\n    </ul>\n  </section>\n</template>\n\n<script>\n  import ListItem from './archive/ArchiveListItem.vue'\n  import Fuse from 'fuse.js'\n\n  export default {\n    components: {ListItem},\n    props: {\n      query: {\n        type: String\n      }\n    },\n    data () {\n      return {\n        fuse: null\n      }\n    },\n    computed: {\n      queryPosts () {\n        return this.fuse && this.query ? this.fuse.search(this.query) : []\n      }\n    },\n    mounted () {\n      let list = this.$store.state.postList.slice()\n      this.fuse = new Fuse(list, {\n        // Whether to sort the result list, by score.\n        shouldSort: true,\n        // At what point does the match algorithm give up.\n        // A threshold of 0.0 requires a perfect match (of both letters and location).\n        // A threshold of 1.0 would match anything.\n        threshold: 0.4,\n        // Determines approximately where in the text is the pattern expected to be found.\n        location: 0,\n        // Determines how close the match must be to the fuzzy location (specified by location).\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ['id', 'title']\n      })\n    }\n  }\n</script>\n\n<style lang=\"less\" rel=\"stylesheet/less\" scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/Query.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Search '\"+_vm._s(_vm.query)+\"'\")]),_vm._v(\" \"),_c('p',{staticClass:\"text-muted\"},[(_vm.queryPosts.length)?_c('span',[_c('i',{staticClass:\"glyphicon glyphicon-check\"}),_vm._v(\" \"),_c('b',[_vm._v(_vm._s(_vm.queryPosts.length))]),_vm._v(\" matched found.\\n    \")]):_c('span',[_c('i',{staticClass:\"glyphicon glyphicon-info-sign\"}),_vm._v(\" No result.\\n    \")])]),_vm._v(\" \"),_c('ul',{staticClass:\"archives-list\"},_vm._l((_vm.queryPosts),function(post){return _c('li',[_c('list-item',{attrs:{\"post\":post,\"show-year\":true}})],1)}))])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-737cc366\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/Query.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-737cc366\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Query.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Query.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Query.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-737cc366\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Query.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-737cc366\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/Query.vue\n// module id = null\n// module chunks = ","/*!\n * Fuse.js v3.2.0 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bitapRegexSearch = __webpack_require__(5);\nvar bitapSearch = __webpack_require__(7);\nvar patternAlphabet = __webpack_require__(4);\n\nvar Bitap = function () {\n  function Bitap(pattern, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === undefined ? false : _ref$isCaseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n    _classCallCheck(this, Bitap);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: isCaseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength\n    };\n\n    this.pattern = this.options.isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    if (this.pattern.length <= maxPatternLength) {\n      this.patternAlphabet = patternAlphabet(this.pattern);\n    }\n  }\n\n  _createClass(Bitap, [{\n    key: 'search',\n    value: function search(text) {\n      if (!this.options.isCaseSensitive) {\n        text = text.toLowerCase();\n      }\n\n      // Exact match\n      if (this.pattern === text) {\n        return {\n          isMatch: true,\n          score: 0,\n          matchedIndices: [[0, text.length - 1]]\n        };\n      }\n\n      // When pattern length is greater than the machine word length, just do a a regex comparison\n      var _options = this.options,\n          maxPatternLength = _options.maxPatternLength,\n          tokenSeparator = _options.tokenSeparator;\n\n      if (this.pattern.length > maxPatternLength) {\n        return bitapRegexSearch(text, this.pattern, tokenSeparator);\n      }\n\n      // Otherwise, use Bitap algorithm\n      var _options2 = this.options,\n          location = _options2.location,\n          distance = _options2.distance,\n          threshold = _options2.threshold,\n          findAllMatches = _options2.findAllMatches,\n          minMatchCharLength = _options2.minMatchCharLength;\n\n      return bitapSearch(text, this.pattern, this.patternAlphabet, {\n        location: location,\n        distance: distance,\n        threshold: threshold,\n        findAllMatches: findAllMatches,\n        minMatchCharLength: minMatchCharLength\n      });\n    }\n  }]);\n\n  return Bitap;\n}();\n\n// let x = new Bitap(\"od mn war\", {})\n// let result = x.search(\"Old Man's War\")\n// console.log(result)\n\nmodule.exports = Bitap;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArray = __webpack_require__(0);\n\nvar deepValue = function deepValue(obj, path, list) {\n  if (!path) {\n    // If there's no path left, we've gotten to the object we care about.\n    list.push(obj);\n  } else {\n    var dotIndex = path.indexOf('.');\n    var firstSegment = path;\n    var remaining = null;\n\n    if (dotIndex !== -1) {\n      firstSegment = path.slice(0, dotIndex);\n      remaining = path.slice(dotIndex + 1);\n    }\n\n    var value = obj[firstSegment];\n\n    if (value !== null && value !== undefined) {\n      if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n        list.push(value.toString());\n      } else if (isArray(value)) {\n        // Search each item in the array.\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepValue(value[i], remaining, list);\n        }\n      } else if (remaining) {\n        // An object. Recurse further.\n        deepValue(value, remaining, list);\n      }\n    }\n  }\n\n  return list;\n};\n\nmodule.exports = function (obj, path) {\n  return deepValue(obj, path, []);\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function () {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var matchedIndices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern) {\n  var mask = {};\n  var len = pattern.length;\n\n  for (var i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0;\n  }\n\n  for (var _i = 0; _i < len; _i += 1) {\n    mask[pattern.charAt(_i)] |= 1 << len - _i - 1;\n  }\n\n  return mask;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar SPECIAL_CHARS_REGEX = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\nmodule.exports = function (text, pattern) {\n  var tokenSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : / +/g;\n\n  var regex = new RegExp(pattern.replace(SPECIAL_CHARS_REGEX, '\\\\$&').replace(tokenSeparator, '|'));\n  var matches = text.match(regex);\n  var isMatch = !!matches;\n  var matchedIndices = [];\n\n  if (isMatch) {\n    for (var i = 0, matchesLen = matches.length; i < matchesLen; i += 1) {\n      var match = matches[i];\n      matchedIndices.push([text.indexOf(match), match.length - 1]);\n    }\n  }\n\n  return {\n    // TODO: revisit this score\n    score: isMatch ? 0.5 : 1,\n    isMatch: isMatch,\n    matchedIndices: matchedIndices\n  };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern, _ref) {\n  var _ref$errors = _ref.errors,\n      errors = _ref$errors === undefined ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === undefined ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === undefined ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance;\n\n  var accuracy = errors / pattern.length;\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bitapScore = __webpack_require__(6);\nvar matchedIndices = __webpack_require__(3);\n\nmodule.exports = function (text, pattern, patternAlphabet, _ref) {\n  var _ref$location = _ref.location,\n      location = _ref$location === undefined ? 0 : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n  var expectedLocation = location;\n  // Set starting location at beginning text and initialize the alphabet.\n  var textLen = text.length;\n  // Highest score beyond which we give up.\n  var currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  var bestLocation = text.indexOf(pattern, expectedLocation);\n\n  var patternLen = pattern.length;\n\n  // a mask of the matches\n  var matchMask = [];\n  for (var i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0;\n  }\n\n  if (bestLocation !== -1) {\n    var score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen);\n\n    if (bestLocation !== -1) {\n      var _score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n      currentThreshold = Math.min(_score, currentThreshold);\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score3 = bitapScore(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n\n      if (_score3 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    var bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1;\n      }\n\n      // First pass: exact match\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (_i !== 0) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break;\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    var _score2 = bitapScore(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n\n    if (_score2 > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  // Count exact matches (those with a score of 0) to be \"almost\" exact\n  return {\n    isMatch: bestLocation >= 0,\n    score: finalScore === 0 ? 0.001 : finalScore,\n    matchedIndices: matchedIndices(matchMask, minMatchCharLength)\n  };\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bitap = __webpack_require__(1);\nvar deepValue = __webpack_require__(2);\nvar isArray = __webpack_require__(0);\n\nvar Fuse = function () {\n  function Fuse(list, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$caseSensitive = _ref.caseSensitive,\n        caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng,\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? null : _ref$id,\n        _ref$keys = _ref.keys,\n        keys = _ref$keys === undefined ? [] : _ref$keys,\n        _ref$shouldSort = _ref.shouldSort,\n        shouldSort = _ref$shouldSort === undefined ? true : _ref$shouldSort,\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === undefined ? deepValue : _ref$getFn,\n        _ref$sortFn = _ref.sortFn,\n        sortFn = _ref$sortFn === undefined ? function (a, b) {\n      return a.score - b.score;\n    } : _ref$sortFn,\n        _ref$tokenize = _ref.tokenize,\n        tokenize = _ref$tokenize === undefined ? false : _ref$tokenize,\n        _ref$matchAllTokens = _ref.matchAllTokens,\n        matchAllTokens = _ref$matchAllTokens === undefined ? false : _ref$matchAllTokens,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === undefined ? false : _ref$includeMatches,\n        _ref$includeScore = _ref.includeScore,\n        includeScore = _ref$includeScore === undefined ? false : _ref$includeScore,\n        _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: caseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      id: id,\n      keys: keys,\n      includeMatches: includeMatches,\n      includeScore: includeScore,\n      shouldSort: shouldSort,\n      getFn: getFn,\n      sortFn: sortFn,\n      verbose: verbose,\n      tokenize: tokenize,\n      matchAllTokens: matchAllTokens\n    };\n\n    this.setCollection(list);\n  }\n\n  _createClass(Fuse, [{\n    key: 'setCollection',\n    value: function setCollection(list) {\n      this.list = list;\n      return list;\n    }\n  }, {\n    key: 'search',\n    value: function search(pattern) {\n      this._log('---------\\nSearch pattern: \"' + pattern + '\"');\n\n      var _prepareSearchers2 = this._prepareSearchers(pattern),\n          tokenSearchers = _prepareSearchers2.tokenSearchers,\n          fullSearcher = _prepareSearchers2.fullSearcher;\n\n      var _search2 = this._search(tokenSearchers, fullSearcher),\n          weights = _search2.weights,\n          results = _search2.results;\n\n      this._computeScore(weights, results);\n\n      if (this.options.shouldSort) {\n        this._sort(results);\n      }\n\n      return this._format(results);\n    }\n  }, {\n    key: '_prepareSearchers',\n    value: function _prepareSearchers() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var tokenSearchers = [];\n\n      if (this.options.tokenize) {\n        // Tokenize on the separator\n        var tokens = pattern.split(this.options.tokenSeparator);\n        for (var i = 0, len = tokens.length; i < len; i += 1) {\n          tokenSearchers.push(new Bitap(tokens[i], this.options));\n        }\n      }\n\n      var fullSearcher = new Bitap(pattern, this.options);\n\n      return { tokenSearchers: tokenSearchers, fullSearcher: fullSearcher };\n    }\n  }, {\n    key: '_search',\n    value: function _search() {\n      var tokenSearchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fullSearcher = arguments[1];\n\n      var list = this.list;\n      var resultMap = {};\n      var results = [];\n\n      // Check the first item in the list, if it's a string, then we assume\n      // that every item in the list is also a string, and thus it's a flattened array.\n      if (typeof list[0] === 'string') {\n        // Iterate over every item\n        for (var i = 0, len = list.length; i < len; i += 1) {\n          this._analyze({\n            key: '',\n            value: list[i],\n            record: i,\n            index: i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n\n        return { weights: null, results: results };\n      }\n\n      // Otherwise, the first item is an Object (hopefully), and thus the searching\n      // is done on the values of the keys of each item.\n      var weights = {};\n      for (var _i = 0, _len = list.length; _i < _len; _i += 1) {\n        var item = list[_i];\n        // Iterate over every key\n        for (var j = 0, keysLen = this.options.keys.length; j < keysLen; j += 1) {\n          var key = this.options.keys[j];\n          if (typeof key !== 'string') {\n            weights[key.name] = {\n              weight: 1 - key.weight || 1\n            };\n            if (key.weight <= 0 || key.weight > 1) {\n              throw new Error('Key weight has to be > 0 and <= 1');\n            }\n            key = key.name;\n          } else {\n            weights[key] = {\n              weight: 1\n            };\n          }\n\n          this._analyze({\n            key: key,\n            value: this.options.getFn(item, key),\n            record: item,\n            index: _i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n\n      return { weights: weights, results: results };\n    }\n  }, {\n    key: '_analyze',\n    value: function _analyze(_ref2, _ref3) {\n      var key = _ref2.key,\n          _ref2$arrayIndex = _ref2.arrayIndex,\n          arrayIndex = _ref2$arrayIndex === undefined ? -1 : _ref2$arrayIndex,\n          value = _ref2.value,\n          record = _ref2.record,\n          index = _ref2.index;\n      var _ref3$tokenSearchers = _ref3.tokenSearchers,\n          tokenSearchers = _ref3$tokenSearchers === undefined ? [] : _ref3$tokenSearchers,\n          _ref3$fullSearcher = _ref3.fullSearcher,\n          fullSearcher = _ref3$fullSearcher === undefined ? [] : _ref3$fullSearcher,\n          _ref3$resultMap = _ref3.resultMap,\n          resultMap = _ref3$resultMap === undefined ? {} : _ref3$resultMap,\n          _ref3$results = _ref3.results,\n          results = _ref3$results === undefined ? [] : _ref3$results;\n\n      // Check if the texvaluet can be searched\n      if (value === undefined || value === null) {\n        return;\n      }\n\n      var exists = false;\n      var averageScore = -1;\n      var numTextMatches = 0;\n\n      if (typeof value === 'string') {\n        this._log('\\nKey: ' + (key === '' ? '-' : key));\n\n        var mainSearchResult = fullSearcher.search(value);\n        this._log('Full text: \"' + value + '\", score: ' + mainSearchResult.score);\n\n        if (this.options.tokenize) {\n          var words = value.split(this.options.tokenSeparator);\n          var scores = [];\n\n          for (var i = 0; i < tokenSearchers.length; i += 1) {\n            var tokenSearcher = tokenSearchers[i];\n\n            this._log('\\nPattern: \"' + tokenSearcher.pattern + '\"');\n\n            // let tokenScores = []\n            var hasMatchInText = false;\n\n            for (var j = 0; j < words.length; j += 1) {\n              var word = words[j];\n              var tokenSearchResult = tokenSearcher.search(word);\n              var obj = {};\n              if (tokenSearchResult.isMatch) {\n                obj[word] = tokenSearchResult.score;\n                exists = true;\n                hasMatchInText = true;\n                scores.push(tokenSearchResult.score);\n              } else {\n                obj[word] = 1;\n                if (!this.options.matchAllTokens) {\n                  scores.push(1);\n                }\n              }\n              this._log('Token: \"' + word + '\", score: ' + obj[word]);\n              // tokenScores.push(obj)\n            }\n\n            if (hasMatchInText) {\n              numTextMatches += 1;\n            }\n          }\n\n          averageScore = scores[0];\n          var scoresLen = scores.length;\n          for (var _i2 = 1; _i2 < scoresLen; _i2 += 1) {\n            averageScore += scores[_i2];\n          }\n          averageScore = averageScore / scoresLen;\n\n          this._log('Token score average:', averageScore);\n        }\n\n        var finalScore = mainSearchResult.score;\n        if (averageScore > -1) {\n          finalScore = (finalScore + averageScore) / 2;\n        }\n\n        this._log('Score average:', finalScore);\n\n        var checkTextMatches = this.options.tokenize && this.options.matchAllTokens ? numTextMatches >= tokenSearchers.length : true;\n\n        this._log('\\nCheck Matches: ' + checkTextMatches);\n\n        // If a match is found, add the item to <rawResults>, including its score\n        if ((exists || mainSearchResult.isMatch) && checkTextMatches) {\n          // Check if the item already exists in our results\n          var existingResult = resultMap[index];\n          if (existingResult) {\n            // Use the lowest score\n            // existingResult.score, bitapResult.score\n            existingResult.output.push({\n              key: key,\n              arrayIndex: arrayIndex,\n              value: value,\n              score: finalScore,\n              matchedIndices: mainSearchResult.matchedIndices\n            });\n          } else {\n            // Add it to the raw result list\n            resultMap[index] = {\n              item: record,\n              output: [{\n                key: key,\n                arrayIndex: arrayIndex,\n                value: value,\n                score: finalScore,\n                matchedIndices: mainSearchResult.matchedIndices\n              }]\n            };\n\n            results.push(resultMap[index]);\n          }\n        }\n      } else if (isArray(value)) {\n        for (var _i3 = 0, len = value.length; _i3 < len; _i3 += 1) {\n          this._analyze({\n            key: key,\n            arrayIndex: _i3,\n            value: value[_i3],\n            record: record,\n            index: index\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n    }\n  }, {\n    key: '_computeScore',\n    value: function _computeScore(weights, results) {\n      this._log('\\n\\nComputing score:\\n');\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var output = results[i].output;\n        var scoreLen = output.length;\n\n        var totalScore = 0;\n        var bestScore = 1;\n\n        for (var j = 0; j < scoreLen; j += 1) {\n          var weight = weights ? weights[output[j].key].weight : 1;\n          var score = weight === 1 ? output[j].score : output[j].score || 0.001;\n          var nScore = score * weight;\n\n          if (weight !== 1) {\n            bestScore = Math.min(bestScore, nScore);\n          } else {\n            output[j].nScore = nScore;\n            totalScore += nScore;\n          }\n        }\n\n        results[i].score = bestScore === 1 ? totalScore / scoreLen : bestScore;\n\n        this._log(results[i]);\n      }\n    }\n  }, {\n    key: '_sort',\n    value: function _sort(results) {\n      this._log('\\n\\nSorting....');\n      results.sort(this.options.sortFn);\n    }\n  }, {\n    key: '_format',\n    value: function _format(results) {\n      var finalOutput = [];\n\n      this._log('\\n\\nOutput:\\n\\n', JSON.stringify(results));\n\n      var transformers = [];\n\n      if (this.options.includeMatches) {\n        transformers.push(function (result, data) {\n          var output = result.output;\n          data.matches = [];\n\n          for (var i = 0, len = output.length; i < len; i += 1) {\n            var item = output[i];\n\n            if (item.matchedIndices.length === 0) {\n              continue;\n            }\n\n            var obj = {\n              indices: item.matchedIndices,\n              value: item.value\n            };\n            if (item.key) {\n              obj.key = item.key;\n            }\n            if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {\n              obj.arrayIndex = item.arrayIndex;\n            }\n            data.matches.push(obj);\n          }\n        });\n      }\n\n      if (this.options.includeScore) {\n        transformers.push(function (result, data) {\n          data.score = result.score;\n        });\n      }\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var result = results[i];\n\n        if (this.options.id) {\n          result.item = this.options.getFn(result.item, this.options.id)[0];\n        }\n\n        if (!transformers.length) {\n          finalOutput.push(result.item);\n          continue;\n        }\n\n        var data = {\n          item: result.item\n        };\n\n        for (var j = 0, _len2 = transformers.length; j < _len2; j += 1) {\n          transformers[j](result, data);\n        }\n\n        finalOutput.push(data);\n      }\n\n      return finalOutput;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      if (this.options.verbose) {\n        var _console;\n\n        (_console = console).log.apply(_console, arguments);\n      }\n    }\n  }]);\n\n  return Fuse;\n}();\n\nmodule.exports = Fuse;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=fuse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fuse.js/dist/fuse.js\n// module id = BDm9\n// module chunks = 6"],"sourceRoot":""}