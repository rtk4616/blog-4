{"id":"angular-tutorial-more-templating","title":"Angular 教程：更多的模板","date":"2015-12-29T08:44:23.000Z","categories":["JavaScript"],"tags":["AngularJs"],"html":"<p>在这一步中，你将实现当用户点击手机列表中的一条记录时显示的详细视图。</p>\n<ul>\n<li>当你点击列表中的一条记录时，页面会显示一个带有该记录详细信息的视图</li>\n</ul>\n<p>为了实现这个目标，我们使用<a href=\"https://docs.angularjs.org/api/ng/service/$http\">$http</a>来抓取数据并刷新<code>phone-detail.html</code>视图模板。 最重要的改动如下所示。你可以在<a href=\"https://github.com/angular/angular-phonecat/compare/step-7...step-8\" title=\"See diff on Github\">GitHub</a>上查看它与之前的代码有何区别。</p>\n<hr>\n<h2 id=\"\">数据 <a class=\"header-anchor\" href=\"#\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>除了<code>phones.json</code>以外，<code>app/phones/</code>目录还包含了每台手机设备详细信息的JSON文件：</p>\n<p><code>app/phones/nexus-s.json</code>：</p>\n<pre><code>{\n  &quot;additionalFeatures&quot;: &quot;Contour Display, Near Field Communications (NFC),...&quot;,\n  &quot;android&quot;: {\n      &quot;os&quot;: &quot;Android 2.3&quot;,\n      &quot;ui&quot;: &quot;Android&quot;\n  },\n  ...\n  &quot;images&quot;: [\n      &quot;img/phones/nexus-s.0.jpg&quot;,\n      &quot;img/phones/nexus-s.1.jpg&quot;,\n      &quot;img/phones/nexus-s.2.jpg&quot;,\n      &quot;img/phones/nexus-s.3.jpg&quot;\n  ],\n  &quot;storage&quot;: {\n      &quot;flash&quot;: &quot;16384MB&quot;,\n      &quot;ram&quot;: &quot;512MB&quot;\n  }\n}\n</code></pre>\n<p>这些文件使用了同样的格式来为手机设备描述一些各种各样的属性。我们会在详细视图中展现它们。</p>\n<hr>\n<h2 id=\"-2\">控制器 <a class=\"header-anchor\" href=\"#-2\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>我们扩展了<code>PhoneDetailCtrl</code>控制器，在其中使用<code>$http</code>服务来抓取JSON文件，就跟获取手机列表的方式一模一样：</p>\n<p><code>app/js/controllers.js</code>：</p>\n<pre><code>var phonecatControllers = angular.module('phonecatControllers',[]);\n\nphonecatControllers.controller('PhoneDetailCtrl', ['$scope', '$routeParams', '$http',\n  function($scope, $routeParams, $http) {\n    $http.get('phones/' + $routeParams.phoneId + '.json').success(function(data) {\n      $scope.phone = data;\n    });\n  }]);\n</code></pre>\n<p>为了构建HTTP请求的URL，我们使用到了<code>$route</code>服务从当前路由中提取到的<code>$routeParams.phoneId</code></p>\n<hr>\n<h2 id=\"-3\">模板 <a class=\"header-anchor\" href=\"#-3\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>之前临时加入的TBD模板现在被一些包含手机详细信息的列表与绑定取代了。注意我们是如何使用Angular表达式以及<code>ngRepeat</code>来将手机数据从模型映射到视图上的。</p>\n<p><code>app/partials/phone-detail.html</code>：</p>\n<pre><code>&lt;img ng-src=&quot;{{phone.images[0]}}&quot; class=&quot;phone&quot;&gt;\n\n&lt;h1&gt;{{phone.name}}&lt;/h1&gt;\n\n&lt;p&gt;{{phone.description}}&lt;/p&gt;\n\n&lt;ul class=&quot;phone-thumbs&quot;&gt;\n  &lt;li ng-repeat=&quot;img in phone.images&quot;&gt;\n    &lt;img ng-src=&quot;{{img}}&quot;&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;ul class=&quot;specs&quot;&gt;\n  &lt;li&gt;\n    &lt;span&gt;Availability and Networks&lt;/span&gt;\n    &lt;dl&gt;\n      &lt;dt&gt;Availability&lt;/dt&gt;\n      &lt;dd ng-repeat=&quot;availability in phone.availability&quot;&gt;{{availability}}&lt;/dd&gt;\n    &lt;/dl&gt;\n  &lt;/li&gt;\n    ...\n  &lt;li&gt;\n    &lt;span&gt;Additional Features&lt;/span&gt;\n    &lt;dd&gt;{{phone.additionalFeatures}}&lt;/dd&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<hr>\n<h2 id=\"-4\">测试 <a class=\"header-anchor\" href=\"#-4\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>我们为<code>PhoneListCtrl</code>编写了一个类似于step 5的单元测试。</p>\n<p><code>test/unit/controllersSpec.js</code>：</p>\n<pre><code>beforeEach(module('phonecatApp'));\n\n  ...\n\n  describe('PhoneDetailCtrl', function(){\n    var scope, $httpBackend, ctrl;\n\n    beforeEach(inject(function(_$httpBackend_, $rootScope, $routeParams, $controller) {\n      $httpBackend = _$httpBackend_;\n      $httpBackend.expectGET('phones/xyz.json').respond({name:'phone xyz'});\n\n      $routeParams.phoneId = 'xyz';\n      scope = $rootScope.$new();\n      ctrl = $controller('PhoneDetailCtrl', {$scope: scope});\n    }));\n\n\n    it('should fetch phone detail', function() {\n      expect(scope.phone).toBeUndefined();\n      $httpBackend.flush();\n\n      expect(scope.phone).toEqual({name:'phone xyz'});\n    });\n  });\n...\n</code></pre>\n<p>你现在应该可以在Karma终端看到以下输出：</p>\n<pre><code>Chrome 22.0: Executed 3 of 3 SUCCESS (0.039 secs / 0.012 secs)\n</code></pre>\n<p>同时我们也添加了一个端到端测试，验证当页面跳转到Nexus S详细视图的时候页头是不是真的显示了Nexus S</p>\n<p><code>test/e2e/scenarios.js</code>：</p>\n<pre><code>...\n  describe('Phone detail view', function() {\n\n    beforeEach(function() {\n      browser.get('app/index.html#/phones/nexus-s');\n    });\n\n\n    it('should display nexus-s page', function() {\n      expect(element(by.binding('phone.name')).getText()).toBe('Nexus S');\n    });\n  });\n...\n</code></pre>\n<p>你可以通过执行<code>npm run protractor</code>来观察测试运行。</p>\n<h2 id=\"-5\">课外扩展 <a class=\"header-anchor\" href=\"#-5\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>使用<a href=\"http://angular.github.io/protractor/#/api\">Protractor API</a>编写一个测试，验证我们在Nexus S详细页上显示了4张标题图片。</p>\n<h2 id=\"-6\">总结 <a class=\"header-anchor\" href=\"#-6\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>现在手机详细视图已经到位了，在<a href=\"/p/angular-tutorial-filters/\">step 9</a>中我们将学习如何编写自定义的过滤器。</p>\n","full":true}