{"id":"angular-tutorial-filters","title":"Angular 教程：过滤器","date":"2015-12-29T09:12:33.000Z","categories":["JavaScript"],"tags":["AngularJs"],"html":"<p>在这一步中你将会学习如何创建自定义的过滤器。</p>\n<ul>\n<li>在上一步中，详细页面通过显示true或者false来表示一个手机是否具有某项功能。我们将使用一个自定义的过滤器来把这些字符串转换成图标：用✓表示true，用✘表示false</li>\n</ul>\n<p>最重要的改动如下所示。你可以在<a href=\"https://github.com/angular/angular-phonecat/compare/step-8...step-9\" title=\"See diff on Github\">GitHub</a>上查看它与之前的代码有何区别。</p>\n<hr>\n<h2 id=\"\">自定义过滤器 <a class=\"header-anchor\" href=\"#\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>为了创建新的过滤器，我们创建了一个<code>phonecatFilters</code>模块，并且将自定义的过滤器注册在这个模块下。</p>\n<p><code>app/js/filters.js</code>：</p>\n<pre><code>angular.module('phonecatFilters', []).filter('checkmark', function() {\n  return function(input) {\n    return input ? '\\u2713' : '\\u2718';\n  };\n});\n</code></pre>\n<p>过滤器的名字叫checkmark，<code>input</code>将被转换为<code>true</code>或者<code>false</code>，然后我们根据结果返回两个unicode编码字符中的其中之一。 现在过滤器已经准备好了，我们需要给<code>phonecatApp</code>主模块添加一项<code>phonecatFilters</code>模块的依赖。</p>\n<p><code>app/js/app.js</code>：</p>\n<pre><code>...\nangular.module('phonecatApp', ['ngRoute','phonecatControllers','phonecatFilters']);\n...\n</code></pre>\n<hr>\n<h2 id=\"-2\">模板 <a class=\"header-anchor\" href=\"#-2\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>既然过滤器代码存在于<code>app/js/filters.js</code></p>\n<p>文件内，我们就需要把它包含到布局模版中。</p>\n<p><code>app/index.html</code>：</p>\n<pre><code>...\n &lt;script src=&quot;js/controllers.js&quot;&gt;&lt;/script&gt;\n &lt;script src=&quot;js/filters.js&quot;&gt;&lt;/script&gt;\n...\n</code></pre>\n<p>在Angualr中根据以下语法来使用过滤器：</p>\n<pre><code>{{ expression | filter }}\n</code></pre>\n<p>现在我们来给手机详细模板添加过滤器：</p>\n<p><code>app/partials/phone-detail.html</code>：</p>\n<pre><code>...\n    &lt;dl&gt;\n      &lt;dt&gt;Infrared&lt;/dt&gt;\n      &lt;dd&gt;{{phone.connectivity.infrared | checkmark}}&lt;/dd&gt;\n      &lt;dt&gt;GPS&lt;/dt&gt;\n      &lt;dd&gt;{{phone.connectivity.gps | checkmark}}&lt;/dd&gt;\n    &lt;/dl&gt;\n...\n</code></pre>\n<hr>\n<h2 id=\"-3\">测试 <a class=\"header-anchor\" href=\"#-3\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>就像任何其它的组件一样，过滤器也应该要测一测。所幸的是编写这些测试是非常简单的事情。</p>\n<p><code>test/unit/filtersSpec.js</code>：</p>\n<pre><code>describe('filter', function() {\n\n  beforeEach(module('phonecatFilters'));\n\n  describe('checkmark', function() {\n\n    it('should convert boolean values to unicode checkmark or cross',\n        inject(function(checkmarkFilter) {\n      expect(checkmarkFilter(true)).toBe('\\u2713');\n      expect(checkmarkFilter(false)).toBe('\\u2718');\n    }));\n  });\n});\n</code></pre>\n<p>在每一个过滤器测试执行以前我们都必须调用<code>beforeEach(module('phonecatFilters'))</code>，这个调用将<code>phonecatFilters</code>模块加载到了这些测试的注入器中。 需要注意的是我们调用了工具方法<code>inject(function(checkmarkFilter) { ... })</code>来获取需要被测试的过滤器。参考<a href=\"https://docs.angularjs.org/api/ngMock/function/angular.mock.inject\">angular.mock.inject()</a> 与此同时我们也注意到Filter后缀被追加到了我们定义的过滤器名字之后。参考<a href=\"https://docs.angularjs.org/guide/filter#using-filters-in-controllers-services-and-directives\">Filter Guide</a>来获取与此有关的信息。 你现在应该能在Karma控制台中看到如下输出：</p>\n<pre><code>Chrome 22.0: Executed 4 of 4 SUCCESS (0.034 secs / 0.012 secs)\n</code></pre>\n<h2 id=\"-4\">课外扩展 <a class=\"header-anchor\" href=\"#-4\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>我们来试试给<code>index.html</code>中的绑定添加一些<a href=\"https://docs.angularjs.org/api/ng/filter\">Angular的内置过滤器</a>吧：</p>\n<ul>\n<li><code>{{ &quot;lower cap string&quot; | uppercase }}</code></li>\n<li><code>{{ {foo: &quot;bar&quot;, baz: 23} | json }}</code></li>\n<li><code>{{ 1304375948024 | date }}</code></li>\n<li><code>{{ 1304375948024 | date:&quot;MM/dd/yyyy @ h:mma&quot; }}</code></li>\n</ul>\n<p>与此同时我们也可以创建一个带有输入框的模型，然后给它添加一个带过滤器的绑定：</p>\n<pre><code>&lt;input ng-model=&quot;userInput&quot;&gt; Uppercased: {{ userInput | uppercase }}\n</code></pre>\n<h2 id=\"-5\">总结 <a class=\"header-anchor\" href=\"#-5\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>现在我们学会了如何编写和测试自定义的过滤器，通过<a href=\"/p/angular-tutorial-event-handlers/\">step 10</a>来学习如何使用Angular扩展手机详细页面。</p>\n","full":true}