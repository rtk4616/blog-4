{"id":"bfc-theory-and-applications","title":"BFC 原理及应用","date":"2016-03-28T17:43:35.000Z","categories":["CSS"],"html":"<h2 id=\"bfc\">什么是 BFC <a class=\"header-anchor\" href=\"#bfc\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>BFC（Block formatting context）是 CSS 中的一个概念，先来看一下定义 （By MDN）：</p>\n<blockquote>\n<p>A <strong>block formatting context</strong> is a part of a visual CSS rendering of a Web page. It is the region in which the layout of block boxes occurs and in which floats interact with each other.</p>\n</blockquote>\n<p>大意就是，BFC 是 Web 页面通过 CSS 渲染的一个块级（Block-level）区域，具有独立性。</p>\n<p>BFC 对浮动元素的定位与清除都很重要：</p>\n<ul>\n<li>浮动元素的定位与清除规则只适用于同一 BFC 中的元素</li>\n<li>不同 BFC 中的浮动元素不会相互影响</li>\n<li>浮动元素的清除只适用于同一 BFC 中的元素</li>\n</ul>\n<!--more-->\n<h2 id=\"bfc-2\">如何生成 BFC <a class=\"header-anchor\" href=\"#bfc-2\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>一个元素要成为 BFC，必须具备以下特征之一：</p>\n<ul>\n<li>根元素，或者包含根元素的元素</li>\n<li>浮动元素（<code>float</code> 属性不为<code>none</code>）</li>\n<li>绝对定位元素（<code>position</code> 属性为 <code>absolute</code> 或 <code>fixed</code>）</li>\n<li>行内块级元素（<code>display</code> 属性为 <code>inline-block</code>）</li>\n<li>表格单元格或者标题（<code>display</code> 属性为 <code>table-cell</code> 或 <code>table-caption</code>）</li>\n<li>元素的 <code>overflow</code> 属性不为 <code>visible</code></li>\n<li>Flex 元素（<code>display</code> 属性为 <code>flex</code> 或 <code>inline-flex</code>）</li>\n</ul>\n<h2 id=\"bfc-3\">BFC 的应用 <a class=\"header-anchor\" href=\"#bfc-3\" aria-hidden=\"true\">&#128279;</a></h2>\n<h3 id=\"\">自适应双栏布局 <a class=\"header-anchor\" href=\"#\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>之前一直困扰我的一个问题是，如何使用 CSS 实现一个双栏布局，其中一栏宽度固定，另一栏则自动根据父节点剩余宽度填满容器呢？</p>\n<p>因为 CSS 2.x 是不支持计算的，所以不使用 <code>calc</code> 的话，还真的好像没什么办法的样子。</p>\n<p>然而，通过使用 BFC 却可以很容易地达到效果。</p>\n<p>先来看一个没有 BFC 的例子：</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;BFC Example&lt;/title&gt;\n    &lt;style&gt;\n        .aside {\n            width: 100px;\n            height: 150px;\n            float: left;\n            background: #f66;\n        }\n\n        .main {\n            height: 200px;\n            background: #fcc;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;aside&quot;&gt;&lt;/div&gt;\n&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>效果：</p>\n<p><img src=\"https://raw.githubusercontent.com/wxsms/wxsms-img-holder/master/20160328171800.jpg\" alt=\"\"></p>\n<p>在这种情况下，二者共享了同一个 BFC，即 <code>body</code> 根元素，因此，右边元素的定位受到了浮动的影响。</p>\n<p>我们给 <code>.main</code> 添加一个属性，让它成为独立的 BFC：</p>\n<pre><code>.main {\n    overflow: hidden;\n}\n</code></pre>\n<p>效果：</p>\n<p><img src=\"https://raw.githubusercontent.com/wxsms/wxsms-img-holder/master/20160328172031.jpg\" alt=\"\"></p>\n<p>这就是一个自适应两栏布局了。主栏的宽度是随父节点而自动变化的。</p>\n<h3 id=\"-2\">清除内部浮动 <a class=\"header-anchor\" href=\"#-2\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>写 CSS 代码的时候经常会遇到一个问题：如果一个元素内部全部是由浮动元素组成的话，那么它经常会没有高度，即“不能被撑开”。</p>\n<p>我们可以通过在所有浮动元素的最后清除浮动来解决问题，但通过 BFC 的方式其实更简单。</p>\n<p>只需要通过任意方式将浮动元素的容器转换为 BFC（比如添加 <code>overflow: hidden</code> 属性），即使不清除浮动，其依然能被正常“撑开”。</p>\n<p>就像这样：</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;BFC Example&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            width: 660px;\n        }\n\n        .parent {\n            background: #fcc;\n            overflow: hidden;\n        }\n\n        .child {\n            border: 5px solid #f66;\n            width: 200px;\n            height: 200px;\n            float: left;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;parent&quot;&gt;\n    &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>效果：</p>\n<p><img src=\"https://raw.githubusercontent.com/wxsms/wxsms-img-holder/master/20160328173455.jpg\" alt=\"\"></p>\n<h3 id=\"margin\">清除 margin 重叠 <a class=\"header-anchor\" href=\"#margin\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>场景：我们连续定义两个 <code>div</code>，并且都给予 <code>margin: 100px</code> 属性，实际上它们之间的距离也将是 100px 而非 200px，因为 margin 重叠了。</p>\n<p>如果不想让 margin 出现这种重叠的情况，依然可以使用 BFC：给二者都各自套上一个 BFC 容器（或者其中之一），因为 BFC 的独立性，内部布局不会产生对外影响，外部也不会产生对内影响，所以二者的 margin 属性都能生效，最终就能得到 200px 的间距。</p>\n<p>这个就不举实际例子了。</p>\n"}