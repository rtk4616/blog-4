{"id":"limit-prerender-plugin-workers-by-webpack","title":"Limit Prerender Plugin Workers By Webpack","date":"2017-10-29T02:51:17.412Z","categories":["JavaScript"],"tags":["Vue","Webpack","Travis-CI"],"index":false,"draft":false,"html":"<p><a href=\"https://github.com/chrisvfritz/prerender-spa-plugin\">Prerender SPA Plugin</a> 是一个可以将 Vue 页面预渲染为静态 HTML 的 webpack 插件，对静态小站（比如博客）来说很棒棒。但是最近用的时候总发现一个问题：它的 build 失败率越来越高，尤其是在 CI 上。后来在其 repo 的一个 <a href=\"https://github.com/chrisvfritz/prerender-spa-plugin/issues/53\">issue</a> 中发现了问题所在，就是它没有限制 PhantomJS workers 的数量，导致页面一多就直接全部卡死不动，然后超时。</p>\n<blockquote>\n<p>(Workers) Default is as many workers as routes.</p>\n</blockquote>\n<p>虽然有人已经发了 <a href=\"https://github.com/chrisvfritz/prerender-spa-plugin/pull/55\">PR</a> 来修复这个问题，然而好几个月过去了也没有 merge，不知道是什么情况。于是我在自己的尝试中找到了一种可以接受的解决方案：虽然我不能限制你插件 workers 的数量，但是可以限制每个插件渲染的 route 数量呀。</p>\n<p>具体思路就是：</p>\n<ol>\n<li>将所有的 route chunk 成小组，比如 10 个一组</li>\n<li>针对每一个 chunk 创建一个 prerender 插件</li>\n<li>将所有插件都加入到 webpack plugin 中去</li>\n</ol>\n<p>这样一来，就可以保证每个 plugin 最多同时创建 10 个 worker，全部渲染完成后再由下一个 plugin 接着工作。</p>\n<p>简单的代码示例：</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// Generate url list for pre-render</span>\nexports.generateRenderPlugins = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">let</span> paths = [] <span class=\"hljs-comment\">// the routes</span>\n  <span class=\"hljs-keyword\">let</span> chunks = _.chunk(paths, <span class=\"hljs-number\">10</span>) <span class=\"hljs-comment\">// using lodash.chunk</span>\n  <span class=\"hljs-keyword\">let</span> plugins = []\n  <span class=\"hljs-keyword\">let</span> distPath = path.join(__dirname, <span class=\"hljs-string\">'../dist'</span>)\n  <span class=\"hljs-keyword\">let</span> progress = <span class=\"hljs-number\">0</span>\n  chunks.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">chunk</span> =&gt;</span> {\n    plugins.push(<span class=\"hljs-keyword\">new</span> PrerenderSpaPlugin(distPath, chunk, {\n        postProcessHtml (context) {\n          <span class=\"hljs-comment\">// need to log something after each route finish</span>\n          <span class=\"hljs-comment\">// or CI will fail if no log for 10 mins</span>\n          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`[PRE-RENDER] (<span class=\"hljs-subst\">${++progress}</span> / <span class=\"hljs-subst\">${paths.length}</span>) <span class=\"hljs-subst\">${context.route}</span>`</span>)\n          <span class=\"hljs-keyword\">return</span> context.html\n        }\n      }\n    ))\n  })\n  <span class=\"hljs-keyword\">return</span> plugins\n}\n</code></pre>\n","full":true}