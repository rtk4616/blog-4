{"id":"upgrade-projects-built-by-vue-cli","title":"Upgrade Projects Built by vue-cli","date":"2017-12-18T12:08:22.025Z","tags":["Vue","Webpack"],"index":true,"draft":false,"html":"<p>使用 <a href=\"https://github.com/vuejs/vue-cli\">vue-cli</a> 创建的脚手架项目，目前最大的问题是创建后无法自动地进行升级。虽然 3.0 版本已经计划将其作为头等大事来进行改善 (<a href=\"https://github.com/vuejs/vue-cli/issues/589\">#589</a>)，但是现行的版本依然要面对它。以下基于 webpack template 来进行升级时的一些要点解析。</p>\n<!-- more -->\n<h2 id=\"\">依赖 <a class=\"header-anchor\" href=\"#\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>项目整体升级的一个重要目的体现在依赖的升级，如 webpack 从老版本 2 升级到 3，以及 babel / eslint 等各种配套工具的升级（至于 Vue 反倒不是什么大问题）。</p>\n<p>在对依赖进行升级的时候主要有两个参考：</p>\n<ul>\n<li>目前最新的脚手架 (<a href=\"https://github.com/vuejs-templates/webpack\">vuejs-templates/webpack</a>) 依赖版本</li>\n<li><code>yarn outdated</code> (or npm) 给出的建议版本</li>\n</ul>\n<p>outed version 如果是 MINOR / PATCH 更新，直接 upgrade 即可。如果是 MAJOR 更新则需要到相应项目主页上确认一下 breaking changes 是否对自己有影响。</p>\n<p>以下列举一些主要的依赖。</p>\n<h3 id=\"webpack\">Webpack <a class=\"header-anchor\" href=\"#webpack\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>Webpack 2 -&gt; 3 其实是无痛升级的。也就是说基本不用更改什么配置。</p>\n<h3 id=\"eslint\">ESLint <a class=\"header-anchor\" href=\"#eslint\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>ESlint 及其相关库的升级也没什么需要特别注意的地方，因为它并不参与最终构建。只不过升级以后可能会有 lint failed cases （因为新版本一般会添加新的 rules），注意修复即可。</p>\n<h3 id=\"babel\">Babel <a class=\"header-anchor\" href=\"#babel\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>Babel 相关的升级是最麻烦（也是最头疼）的一部分。其主要问题体现在：</p>\n<ul>\n<li>其直接参与代码构建，影响巨大，需要特别谨慎</li>\n<li>Babel 作为一个重要工具有一定的学习成本</li>\n<li>Babel 相关库变更较为频繁，典型的如 <code>babel-preset-latest</code> 库废弃并被 <code>babel-preset-env</code> 替代，而后者在最新的版本中又变成了 <code>@babel/preset-env</code>，甚至 <code>babel-core</code> 也废弃了，变成了 <code>@babel/core</code></li>\n</ul>\n<p>在经过了几次的迁移尝试后，建议<strong>目前</strong>的方案是：</p>\n<ul>\n<li>进行 MINOR 升级，如果还在使用 <code>babel-preset-latest</code> 可以将其替换为 <code>babel-preset-env</code>（注意两者的配置大致一样，但略有不同，需要仔细比对）</li>\n<li>暂时不要将 babel 升级至 7.x-beta</li>\n<li>暂时也不要使用 <code>@babel</code> 类型的依赖（实测中出现奇怪的报错，难以追踪、搜索）</li>\n<li>等待 Vue.js 社区给出解决方案</li>\n</ul>\n<h3 id=\"autoprefixer\">AutoPrefixer <a class=\"header-anchor\" href=\"#autoprefixer\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>将 <code>autoprefixer</code> 从 6.x 升级到 7.x 时，注意将 <code>package.json</code> 中的 <code>browserlist</code> 改成 <code>browserslist</code> （一个 s 的区别）</p>\n<h2 id=\"-2\">配置文件 <a class=\"header-anchor\" href=\"#-2\" aria-hidden=\"true\">&#128279;</a></h2>\n<p>这里说的配置文件主要有两方面：Babel 以及 Webpack</p>\n<h3 id=\"babel-2\">Babel <a class=\"header-anchor\" href=\"#babel-2\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>最简单的操作是，直接到 <a href=\"https://github.com/vuejs-templates/webpack\">vuejs-templates/webpack</a> 找到最新的 babel 文件，复制更新的内容下来即可。当然要注意自己已经更改过的内容不要被覆盖。</p>\n<h3 id=\"webpack-2\">Webpack <a class=\"header-anchor\" href=\"#webpack-2\" aria-hidden=\"true\">&#128279;</a></h3>\n<p>Webpack 配置稍微麻烦一些，主要体现在 <code>webpack.base.conf.js</code> 以及 <code>webpack.prod.conf.js</code>，个人总结的升级步骤：</p>\n<ol>\n<li>先升级 Webpack 相关工具到最新版本</li>\n<li>打开官方项目，对文件进行比对并更新相应内容（一般 <code>webpack.prod.conf.js</code> 会有较多内容更新，而且主要是 <code>plugins</code> 配置项）</li>\n<li>如果遇到目前没有安装的依赖则安装之</li>\n</ol>\n<p>当然这只适用于 Webpack 2 -&gt; 3 的升级，至于 1 -&gt; 2 或者 1-&gt; 3 没试过，不好说。</p>\n<p>做完以上操作，跑过所有 npm scripts 一切正常的话，项目脚手架升级就基本完成了。这个过程说难不难，但是如果对 Webpack / Babel 不熟悉的话还是挺痛苦的，期待 vue-cli 3.0 可以带来更优秀的脚手架解决方案，达到类似 Nuxt.js 的效果，彻底解决升级烦恼。</p>\n"}